opam-version: "2.0"
maintainer: "whitequark@whitequark.org"
patches: ["patches/no-shlib.patch"]
substs: ["libffi.config"]
build: [
  ["rm" "-rf" "src/libffi-abigen"]
  [make "OCAMLFIND=ocamlfind -toolchain ios" "HOSTOCAMLFIND=ocamlfind"
        "ctypes-base" "ctypes-stubs" "ctypes-foreign"]
]
install: [
  [make "OCAMLFIND=ocamlfind -toolchain ios" "HOSTOCAMLFIND=ocamlfind"
        "install"]
]
remove: [
  ["ocamlfind" "-toolchain" "ios" "remove" "ctypes"]
]
depends: [
  "ocaml"
  "ocaml-ios"
  "libffi-sys-ios"
  "ocamlfind" {build}
]
synopsis: "Combinators for binding to C libraries without writing any C."
description: """
ctypes is a library for binding to C libraries using pure OCaml. The primary
aim is to make writing C extensions as straightforward as possible.

The core of ctypes is a set of combinators for describing the structure of C
types -- numeric types, arrays, pointers, structs, unions and functions. You
can use these combinators to describe the types of the functions that you want
to call, then bind directly to those functions -- all without writing or
generating any C!

To install the optional `ctypes.foreign` interface (which uses `libffi` to
provide dynamic access to foreign libraries), you will need to also install
the `ctypes-foreign` optional dependency:

    opam install ctypes ctypes-foreign

This will make the `ctypes.foreign` ocamlfind subpackage available."""
flags: light-uninstall
extra-files: [
  ["libffi.config.in" "md5=ad420c678e08e75214e091ce83c60ce4"]
  ["asneeded.config" "md5=923e1f517e4a24f336f1dd8dc659e759"]
  ["patches/no-shlib.patch" "md5=63900b9f946f3ac3b08832ce6c0d9b55"]
]
url {
  src: "https://github.com/ocamllabs/ocaml-ctypes/archive/0.11.2.tar.gz"
  checksum: "md5=72055750770278a84965bb81aec68d87"
}
